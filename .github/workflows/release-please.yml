on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: googleapis/release-please-action@v4
        id: release-please
        with:
          token: ${{ secrets.RELEASE_PLEASE_GH_TOKEN }}
          config-file: release-please-config.json
      
      # Auto-merge release PRs
      - name: Auto-merge release PR
        if: ${{ steps.release-please.outputs.prs_created == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_GH_TOKEN }}
          PR_DATA: ${{ steps.release-please.outputs.pr }}
        run: |
          echo "Release PR created, attempting to auto-merge..."
          echo "PR Data: $PR_DATA"
          
          # Extract PR number from the JSON output
          pr_number=$(echo "$PR_DATA" | jq -r '.number // empty')
          
          if [ ! -z "$pr_number" ] && [ "$pr_number" != "null" ]; then
            echo "Auto-merging PR #$pr_number with squash commit"
            # Get the PR title and add 'fix:' prefix if it doesn't have a conventional commit prefix
            pr_title=$(gh pr view "$pr_number" --json title --jq '.title')
            if [[ ! "$pr_title" =~ ^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert|BREAKING CHANGE) ]]; then
              echo "Adding 'fix:' prefix to commit message"
              gh pr merge "$pr_number" --squash --delete-branch --title "fix: $pr_title"
            else
              echo "Commit already has conventional prefix, merging as-is"
              gh pr merge "$pr_number" --squash --delete-branch
            fi
          else
            echo "Could not extract PR number from output"
            echo "Attempting to find release PR by label..."
            # Fallback: find PR by release-please label
            pr_number=$(gh pr list --label "autorelease: pending" --json number --jq '.[0].number')
            if [ ! -z "$pr_number" ] && [ "$pr_number" != "null" ]; then
              echo "Found release PR #$pr_number via label, squash merging..."
              pr_title=$(gh pr view "$pr_number" --json title --jq '.title')
              if [[ ! "$pr_title" =~ ^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert|BREAKING CHANGE) ]]; then
                echo "Adding 'fix:' prefix to commit message"
                gh pr merge "$pr_number" --squash --delete-branch --title "fix: $pr_title"
              else
                echo "Commit already has conventional prefix, merging as-is"
                gh pr merge "$pr_number" --squash --delete-branch
              fi
            else
              echo "No release PR found to merge"
            fi
          fi
